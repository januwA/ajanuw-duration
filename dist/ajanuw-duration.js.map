{"version":3,"file":"ajanuw-duration.js","sources":["../src/duration.ts"],"sourcesContent":["interface DurationInterface {\r\n  readonly days?: number;\r\n  readonly hours?: number;\r\n  readonly minutes?: number;\r\n  readonly seconds?: number;\r\n  readonly milliseconds?: number;\r\n  readonly microseconds?: number;\r\n}\r\n\r\n/**\r\n * * 模拟[Dart]的[Duration]\r\n *\r\n * ## Example\r\n *\r\n * ```ts\r\n * const d = new Duration({ days: 1 });\r\n * console.log(d.inHours); // 24\r\n *\r\n * let d2 = d.add(new Duration({ hours: 3, seconds: 10 }));\r\n * console.log(d2.toString()); /// 27:00:10.000000\r\n * ```\r\n * ---\r\n *\r\n * See also:\r\n *\r\n * https://api.dartlang.org/dev/2.0.0-dev.69.0/dart-core/Duration-class.html\r\n */\r\nexport class Duration {\r\n  static readonly microsecondsPerMillisecond: number = 1000;\r\n\r\n  static readonly millisecondsPerSecond: number = 1000;\r\n  static readonly secondsPerMinute: number = 60;\r\n  static readonly minutesPerHour: number = 60;\r\n  static readonly hoursPerDay: number = 24;\r\n\r\n  static readonly microsecondsPerSecond: number =\r\n    Duration.microsecondsPerMillisecond * Duration.millisecondsPerSecond;\r\n  static readonly microsecondsPerMinute: number =\r\n    Duration.microsecondsPerSecond * Duration.secondsPerMinute;\r\n  static readonly microsecondsPerHour: number =\r\n    Duration.microsecondsPerMinute * Duration.minutesPerHour;\r\n  static readonly microsecondsPerDay: number =\r\n    Duration.microsecondsPerHour * Duration.hoursPerDay;\r\n\r\n  static readonly millisecondsPerMinute: number =\r\n    Duration.millisecondsPerSecond * Duration.secondsPerMinute;\r\n  static readonly millisecondsPerHour: number =\r\n    Duration.millisecondsPerMinute * Duration.minutesPerHour;\r\n  static readonly millisecondsPerDay: number =\r\n    Duration.millisecondsPerHour * Duration.hoursPerDay;\r\n\r\n  static readonly secondsPerHour: number =\r\n    Duration.secondsPerMinute * Duration.minutesPerHour;\r\n  static readonly secondsPerDay: number =\r\n    Duration.secondsPerHour * Duration.hoursPerDay;\r\n\r\n  static readonly minutesPerDay: number =\r\n    Duration.minutesPerHour * Duration.hoursPerDay;\r\n\r\n  // static readonly  zero:Duration = Duration(seconds: 0);\r\n\r\n  /*\r\n   * 此Duration对象的值，以微秒为单位。\r\n   */\r\n  private _duration: number = 0;\r\n\r\n  constructor(options: DurationInterface) {\r\n    const days = options.days || 0;\r\n    const hours = options.hours || 0;\r\n    const minutes = options.minutes || 0;\r\n    const seconds = options.seconds || 0;\r\n    const milliseconds = options.milliseconds || 0;\r\n    const microseconds = options.microseconds || 0;\r\n    this._duration =\r\n      Duration.microsecondsPerDay * days +\r\n      Duration.microsecondsPerHour * hours +\r\n      Duration.microsecondsPerMinute * minutes +\r\n      Duration.microsecondsPerSecond * seconds +\r\n      Duration.microsecondsPerMillisecond * milliseconds +\r\n      microseconds;\r\n  }\r\n\r\n  static _microseconds(duration: number): Duration {\r\n    const d = new Duration({});\r\n    d._duration = duration;\r\n    return d;\r\n  }\r\n\r\n  /**\r\n   * * +\r\n   * @param a\r\n   * @param b\r\n   */\r\n  add(other: Duration): Duration {\r\n    return Duration._microseconds(this._duration + other._duration);\r\n  }\r\n\r\n  /**\r\n   * * -\r\n   * @param a\r\n   * @param b\r\n   */\r\n  sub(other: Duration): Duration {\r\n    return Duration._microseconds(this._duration - other._duration);\r\n  }\r\n\r\n  /**\r\n   * * \\*\r\n   * @param a\r\n   * @param b\r\n   */\r\n  mult(factor: number): Duration {\r\n    return Duration._microseconds(Math.round(this._duration * factor));\r\n  }\r\n\r\n  /**\r\n   * * \\/\r\n   * @param a\r\n   * @param b\r\n   */\r\n  div(quotient: number): Duration {\r\n    if (quotient === 0) throw Error(\"Infinity\");\r\n    return Duration._microseconds(Math.floor(this._duration / quotient));\r\n  }\r\n\r\n  /**\r\n   * * abs\r\n   * @param a\r\n   * @param b\r\n   */\r\n  abs(): Duration {\r\n    return Duration._microseconds(Math.abs(this._duration));\r\n  }\r\n\r\n  operator(\r\n    key: \"<\" | \">\" | \"<=\" | \">=\" | \"==\" | \"===\",\r\n    other: Duration\r\n  ): boolean {\r\n    switch (key) {\r\n      case \"<\":\r\n        return this._duration < other._duration;\r\n      case \">\":\r\n        return this._duration > other._duration;\r\n      case \"<=\":\r\n        return this._duration <= other._duration;\r\n      case \">=\":\r\n        return this._duration >= other._duration;\r\n      case \"==\":\r\n        return this._duration == other._duration;\r\n      case \"===\":\r\n        return this._duration === other._duration;\r\n    }\r\n  }\r\n\r\n  get inDays(): number {\r\n    return Math.floor(this._duration / Duration.microsecondsPerDay);\r\n  }\r\n  get inHours(): number {\r\n    return Math.floor(this._duration / Duration.microsecondsPerHour);\r\n  }\r\n  get inMinutes(): number {\r\n    return Math.floor(this._duration / Duration.microsecondsPerMinute);\r\n  }\r\n  get inSeconds(): number {\r\n    return Math.floor(this._duration / Duration.microsecondsPerSecond);\r\n  }\r\n  get inMilliseconds(): number {\r\n    return Math.floor(this._duration / Duration.microsecondsPerMillisecond);\r\n  }\r\n  get inMicroseconds(): number {\r\n    return this._duration;\r\n  }\r\n\r\n  /**\r\n   * 0 | <0 | >0\r\n   * @param other\r\n   */\r\n  compareTo(other: Duration): number {\r\n    return other._duration - this._duration;\r\n  }\r\n\r\n  toString(): string {\r\n    function sixDigits(n: number): string {\r\n      if (n >= 100000) return `${n}`;\r\n      if (n >= 10000) return `0${n}`;\r\n      if (n >= 1000) return `00${n}`;\r\n      if (n >= 100) return `000${n}`;\r\n      if (n >= 10) return `0000${n}`;\r\n      return `00000${n}`;\r\n    }\r\n\r\n    function twoDigits(n: number): string {\r\n      if (n >= 10) return `${n}`;\r\n      return `0${n}`;\r\n    }\r\n\r\n    if (this.inMicroseconds < 0) {\r\n      return \"-${-this}\";\r\n    }\r\n    const twoDigitMinutes: string = twoDigits(\r\n      this.inMinutes % Duration.minutesPerHour\r\n    );\r\n    const twoDigitSeconds: string = twoDigits(\r\n      this.inSeconds % Duration.secondsPerMinute\r\n    );\r\n    const sixDigitUs: string = sixDigits(\r\n      this.inMicroseconds % Duration.microsecondsPerSecond\r\n    );\r\n    return `${this.inHours}:${twoDigitMinutes}:${twoDigitSeconds}.${sixDigitUs}`;\r\n  }\r\n\r\n  /**\r\n   * * Returns whether this `Duration` is negative.\r\n   */\r\n  get isNegative(): boolean {\r\n    return this._duration < 0;\r\n  }\r\n\r\n  /**\r\n   * * 10 -> -10\r\n   */\r\n  negated(): Duration {\r\n    return Duration._microseconds(0 - this._duration);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}